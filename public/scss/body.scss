*{
    overflow-x: hidden;
    //smooth scroll behaviour, when clicking on navmenu links the screen doesn't jump immediately to a corresponding section
    scroll-behavior: smooth;
}

/* ---------------------------
Main body and section styling
--------------------------- */

//set body with left margin so the navbar doesn't obscure objects/text in the body
.body{
    width: 80vw;
    margin-left: 20vw;
}

//outlines the height of each section, padding ensures objects inside sections don't squeeze against borders
section{
    height: 110vh;
    padding: 30px;
    //dotted line to distinguish sections apart
    border-bottom: 5px dotted white;
}

/* -----------------
Home section styling
----------------- */

.homeWrapper {
    width: 100%;
    min-height: 100vh;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

//set home content (text) and thumbnail flex values to resize when screen size changes, orienting the thumbnail underneat text when in mobile view
.homeContent {
    flex: 1 1 17rem;
}

.homeThumbnail {
    flex: 1 1 17rem;
}

.homeContent ul {
    width: 190px;
    padding: 8px 16px;
    border-radius: 3px;
}

/* -----------------
Meal Tracker Styling
----------------- */

//meal cards styling
.cardWrapper {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 100px;
}

//gives cards a white background and rounds the corners. Add margin to put space between cards
.mealCard {
    width: 300px;
    background-color: white;
    border-radius: 8px;
    overflow: hidden;
    margin: 15px;
}

.mealCard img {
    width: 100%;
    height: 200px;
}

.mealContent {
    padding: 16px;
}

//styling the 'View Recipe' button and centering it inside the card
.expandButton {
    display: flex;
    width: 150px;
    padding: 8px 16px;
    border-radius: 4px;
    margin-left: auto;
    margin-right: auto;
}

.amountEntry {
    width: 80px;
    margin-left: 110px;
}

//pop-up details styling
.mealDetails {
    position: fixed;
    top: 20%;
    width: auto;
    height: 70%;
    border-radius: 8px;
    padding: 8px 16px;
    margin-left: 90px;
    margin-right: 90px;
    //hide the pop-up when page loads
    display: none;
}

//User feedback when hovering over "x" button to hide the pop-up
.fa-x {
    cursor: pointer;
}

//styling for the 'load more recipes' button (planned for future development, currently just has placeholder text)
.loadButton {
    display: flex;
    width: 150px;
    padding: 8px 16px;
    border-radius: 4px;
    margin-left: auto;
    margin-right: auto;
}

.loadMoreRecipes {
    align-items: center;
    margin-top: 50px;
}

/* ------------------------
Recipe Time Tracker Styling
------------------------- */
//Recipe Time Tracker uses HTML & CSS code adapted from: [dcode]. (2022 Mar 30). Build a Workout Tracker with JavaScript and Local Storage [Video]. Youtube. https://www.youtube.com/watch?v=HY6nPFsADDo Code class names and input types changed where necessary, adapted the CSS structure and modified it to allow users to add a new recipe entry and keep track of how long it takes them to cook the recipe.

.timeTracker {
    border-collapse: collapse;
    width: 600px;
    margin-left: auto;
    margin-right: auto;
}

.timeTracker th, .timeTracker td {
    padding: 0.75em;
}

//Sets the styling for the user input boxes
.dateEntry, .recipeEntry, .timeEntry {
    display: inline-block;
    box-sizing: border-box;
    height: 2.5em;
    padding: 0.5em 0;
}

//styling the duration input box (number)
.timeEntry {
    width: 5em;
}

//align button in row and make cursor pointer when hovering over the 'x' button
.deleteEntryButton {
    display: flex;
    align-items: center;
    justify-content: center;
    background: none;
    border: none;
    outline: none;
    margin-left: 0.5em;
    cursor: pointer;
}

//outlines the "new entry row" (blank row that just contains the add recipe button)
.newEntryRow {
    border-top: 3px;
    border-bottom: 3px;
}

//button used by user for adding a new row
.addEntryButton {
    display: inline-block;
    padding: 0.5em 1em;
    cursor: pointer;
}

/* ------------------------------------
Body Content Responsiveness for mobile
------------------------------------ */

@media(max-width: 850px){
    .body{
        width: 100vw;
        margin-left: 0vw;
    }

    section{
        padding-top: 120px;
    }
}

/* -------------------------------
Recipe Time Tracker Responsiveness
------------------------------- */

@media(max-width: 850px){
    .timeTracker th, .timeTracker td {
        display: none;
    }

    .timeTracker {
        width: 100%;
    }

    .timeTracker tr {
        display: block;
    }

    .timeTracker th td {
        padding: 0.5em;
    }

    .timeTracker td {
        display: block;
    }

    .dateEntry, .recipeEntry, .timeEntry {
        width: 20em;
    }

    .timeEntry {
        width: 16.5em;
    }

    //Getting labels for header titles (date, recipe made, time taken) and placing them vertically to the left of the table
    td::before {
        content: attr(data-label);
        position: absolute;
        left: 0;
        width: 30%;
        padding-left: 10%;
    }
}